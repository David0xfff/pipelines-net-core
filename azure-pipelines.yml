trigger:
  branches:
    include:
      - main
      - feature/*

pr:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'  # o 'windows-latest'

variables:
  buildConfiguration: 'Release'
  dotnetVersion: '6.0.x'    # Ajusta según tu versión de .NET

steps:
- task: UseDotNet@2
  displayName: 'Instalar .NET SDK'
  inputs:
    packageType: 'sdk'
    version: $(dotnetVersion)

- checkout: self

- task: DotNetCoreCLI@2
  displayName: 'Restaurar paquetes'
  inputs:
    command: 'restore'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'Compilar proyecto'
  inputs:
    command: 'build'
    arguments: '--configuration $(buildConfiguration) --no-restore'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'Ejecutar tests'
  inputs:
    command: 'test'
    projects: '**/*[Tt]ests/*.csproj'
    arguments: '--configuration $(buildConfiguration) --no-build --collect:"XPlat Code Coverage"'

- task: DotNetCoreCLI@2
  displayName: 'Publicar aplicación'
  inputs:
    command: 'publish'
    projects: '**/*.csproj'
    arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    publishWebProjects: false
    zipAfterPublish: true

- task: PublishPipelineArtifact@1
  displayName: 'Subir artefacto'
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)'
    artifactName: 'drop'
